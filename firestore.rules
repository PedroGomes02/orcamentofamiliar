rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    match /{document=**} {
    	allow read, write: if false;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId && exists(request.resource.data.userId);
    }
    
    //Auth to Create New Group
    match /{document} {
    	allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId && exists(request.resource.data.userId);
    }
    
    //Group Creator Rules
    match /groups/{group} {
		 	allow read, write: if request.auth != null && group == request.auth.token.email
    }
    
    match /groups/{group}/{collection}/{document} {
		 	allow read, write: if request.auth != null && group == request.auth.token.email
    }
    
    //Group Member Rules
     match /groups/{group} {
		 	allow read: if request.auth != null && exists (/databases/$(database)/documents/groups/$(group)/members/$(request.auth.token.email))
    }
    
    match /groups/{group}/{collection}/{document} {
    	allow read, write: if request.auth != null && exists (/databases/$(database)/documents/groups/$(group)/members/$(request.auth.token.email))
    }
    
    match /groups/{group}/movements/{document} {
    	allow write: if request.auth != null && exists (/databases/$(database)/documents/groups/$(group)/members/$(request.auth.token.email))
   }
    
  } 
}